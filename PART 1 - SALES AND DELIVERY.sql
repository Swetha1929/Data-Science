CREATE DATABASE SALES_AND_DELIVERY;

USE SALES_AND_DELIVERY;

CREATE TABLE CUST_DIMEN 
(
CUSTOMER_NAME VARCHAR(30),
PROVINCE VARCHAR(30),
REGION VARCHAR(30),
CUSTOMER_SEGMENT varchar(30),
CUST_ID VARCHAR(30));

ALTER TABLE CUST_DIMEN ADD PRIMARY KEY(CUST_ID);

CREATE TABLE MARKET_FACT 
(
ORD_ID VARCHAR(30),
PROD_ID VARCHAR(30),
SHIP_ID VARCHAR(30),
CUST_ID VARCHAR(30),
SALES FLOAT,
DISCOUNT FLOAT,
ORDER_QUANTITY FLOAT,
PROFIT FLOAT,
SHIPPING_COST FLOAT,
PRODUCT_BASE_MARGIN FLOAT );

ALTER TABLE MARKET_FACT ADD FOREIGN KEY (ORD_ID) REFERENCES ORDERS_DIMEN(ORD_ID);
ALTER TABLE MARKET_FACT ADD FOREIGN KEY (CUST_ID) REFERENCES CUST_DIMEN(CUST_ID);
ALTER TABLE MARKET_FACT ADD FOREIGN KEY (SHIP_ID) REFERENCES SHIPPING_DIMEN(SHIP_ID);
ALTER TABLE MARKET_FACT ADD FOREIGN KEY (PROD_ID) REFERENCES PROD_DIMEN(PROD_ID);

CREATE TABLE ORDERS_DIMEN 
(
ORDER_ID INT,
ORDER_DATE DATE,
ORDER_PRIORITY VARCHAR(30),
ORD_ID VARCHAR(30) );

ALTER TABLE ORDERS_DIMEN ADD PRIMARY KEY(ORD_ID);

CREATE TABLE PROD_DIMEN 
(
PRODUCT_CATEGORY VARCHAR(30),
PRODUCT_SUB_CATEGORY VARCHAR(30),
PROD_ID VARCHAR(30) );

ALTER TABLE PROD_DIMEN ADD PRIMARY KEY(PROD_ID);

CREATE TABLE SHIPPING_DIMEN 
(
ORDER_ID INT,
SHIP_MODE VARCHAR(30),
SHIP_DATE DATE,
SHIP_ID VARCHAR(30) );

ALTER TABLE SHIPPING_DIMEN ADD PRIMARY KEY(SHIP_ID);

#--------------------------------------------------------------------------------------

# Questions

#1. Find the top 3 customers who have the maximum number of orders

SELECT CD.CUSTOMER_NAME, MF.ORDER_QUANTITY
FROM CUST_DIMEN AS CD JOIN MARKET_FACT AS MF
ON CD.CUST_ID = MF.CUST_ID ORDER BY MF.ORDER_QUANTITY DESC
LIMIT 3;

#2. Create a new column DaysTakenForDelivery that contains the date difference between Order_Date and Ship_Date.

SELECT OD.ORDER_DATE, SD.SHIP_DATE, datediff(SD.SHIP_DATE,OD.ORDER_DATE) AS DaysTakenForDelivery 
FROM SHIPPING_DIMEN AS SD JOIN MARKET_FACT AS MF
ON SD.SHIP_ID = MF.SHIP_ID JOIN ORDERS_DIMEN AS OD ON MF.ORD_ID = OD.ORD_ID;

#3. Find the customer whose order took the maximum time to get delivered.

SELECT CD.CUSTOMER_NAME, OD.ORDER_DATE, SD.SHIP_DATE, datediff(SD.SHIP_DATE,OD.ORDER_DATE) AS DaysTakenForDelivery 
FROM SHIPPING_DIMEN AS SD JOIN MARKET_FACT AS MF
ON SD.SHIP_ID = MF.SHIP_ID JOIN ORDERS_DIMEN AS OD ON MF.ORD_ID = OD.ORD_ID JOIN CUST_DIMEN AS CD
ON CD.CUST_ID = MF.CUST_ID
ORDER BY DaysTakenForDelivery DESC LIMIT 1;

#4. Retrieve total sales made by each product from the data (use Windows function)

SELECT DISTINCT PROD_ID,SUM(SALES) OVER (PARTITION BY PROD_ID)  AS TOTAL_SALES
FROM MARKET_FACT;

#5. Retrieve the total profit made from each product from the data (use windows function)

SELECT DISTINCT PROD_ID,SUM(PROFIT) OVER ( partition by PROD_ID) AS TOTAL_PROFIT
FROM MARKET_FACT;


#6. Count the total number of unique customers in January and how many of them came back every month over the entire year in 2011

SELECT COUNT(distinct(CD.CUSTOMER_NAME)) AS UNIQUE_CUSTOMER_COUNT 
FROM CUST_DIMEN AS CD JOIN MARKET_FACT AS MF
ON CD.CUST_ID = MF.CUST_ID JOIN ORDERS_DIMEN AS OD 
ON OD.ORD_ID = MF.ORD_ID WHERE OD.ORDER_DATE LIKE '%-01-%';


COMMIT;